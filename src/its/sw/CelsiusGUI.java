/*
 * CelsiusGUI.java
 *
 * Created on 07.12.2009, 10:42:39
  * Angepasst am 20.05.2022 von @author Erhard Volz
*/
package its.sw;

import java.beans.PropertyChangeEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Oliver Schwahlen
 */
public class CelsiusGUI extends JFrame implements ObserverNT.ObserverNT {

    private Controller controller;
    /**
     * Creates new form CelsiusGUI
     *
     * @param controller eine Referenz auf den Controller
     */
    public CelsiusGUI(Controller controller) {
        this.controller = controller;
        initComponents();
        
        // formatierte Ausgabe der Temperatur im Textfeld
//        jTextFieldGrad.setText(String.format("%.2f", temperatur.getCelsius()));

    }
    
    @Override
    public void propertyChange(PropertyChangeEvent changeEvent) {
        // Es ist bekannt das die Tempratur-Klasse diese Meldung schickt
        // Wird nehmen den Absender und Parsen/Konvertieren als Tempratur-Objekt
        Temperatur temperatur = (Temperatur) changeEvent.getSource();
        jTextFieldGrad.setText(String.format("%.2f", temperatur.getCelsius()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldGrad = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonUebernehmen = new javax.swing.JButton();
        jButtonHoch = new javax.swing.JButton();
        jButtonRunter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Celsius");

        jLabel1.setText("in °C");

        jButtonUebernehmen.setText("übernehmen");
        jButtonUebernehmen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUebernehmenActionPerformed(evt);
            }
        });

        jButtonHoch.setText("hoch");
        jButtonHoch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHochActionPerformed(evt);
            }
        });

        jButtonRunter.setText("runter");
        jButtonRunter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonUebernehmen))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jButtonHoch, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRunter)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldGrad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonUebernehmen))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonHoch)
                    .addComponent(jButtonRunter))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void jButtonHochActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHochActionPerformed
      /**
       * wir Implementieren Wrapper-Methoden in Controller um aktualle
       * Tempratur zu holen. Damit wir es dann erhöhen/reduzieren können.
       * Tempratur kann auch von Gui-TextFeld gelsen werden, da muss aber eine
       * Parse stattfinden und ist auch Benutzerabhängig, daher Fehler sind 
       * Möglich, aber wenn wir das Tempratur von Tempratur-Klasse holen,
       * mussen wir nicht weiteres tun.
       */
      controller.setCelsius(controller.getCelsius() + 1);
  
  }//GEN-LAST:event_jButtonHochActionPerformed

  private void jButtonRunterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunterActionPerformed
      controller.setCelsius(controller.getCelsius() - 1);

  }//GEN-LAST:event_jButtonRunterActionPerformed

  private void jButtonUebernehmenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUebernehmenActionPerformed
      try{
        double tempratur = Double.parseDouble(
                jTextFieldGrad.getText().replace(",", "."));
        
        /**
         * hier brauchen wir das aktives Instance von Tempratur-Klasse, den
         * haben wir noch nicht, aber schon bei der Instantiatieren von dieser
         * Gui-Objekt, wurde das Controller Install mitgegeben. Und Controller
         * hat den aktiven Instance von Tempratur-Klasse. Daher werden wir in
         * Controller die Wrapper-Methoden erstellen um tempratur zu setzen.
         * Die Wrapper-Methoden werden die entsprechende Methode von Tempratur-
         * Klasse aufrufen um den Tempratur zu setzen.
         * 
         * Obwohl diese Instance von Gui eine Objekt von Controller bekommen,
         * es wurde hier nicht gespeichert, dieses muss man in die Konstruktor
         * ändern und Controller als lokal-Private Objekt speichern.
         */
        
        controller.setCelsius(tempratur);
        
      } catch(NumberFormatException ex) {
          JOptionPane.showMessageDialog(
                  this, 
                  "Bitte eine gültige Zahl eingeben", 
                  "Fehler", 
                  JOptionPane.ERROR_MESSAGE);
      }
  
  }//GEN-LAST:event_jButtonUebernehmenActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonHoch;
    private javax.swing.JButton jButtonRunter;
    private javax.swing.JButton jButtonUebernehmen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextFieldGrad;
    // End of variables declaration//GEN-END:variables
}
